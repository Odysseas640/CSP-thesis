0005 0016 0086 0117 0098
0012 0008 0081 0069 0133
0036 0063 0039 0050 0073 0142
0051 0023 0045 0132 0156
0004 0080 0082 0084 0094 0155
0003 0064 0047 0135
0065 0106 0076 0103
0009 0060 0083 0116 0118 0144
0007 0077 0101
0001 0059 0087 0070
0011 0105 0091 0107 0074 0136
0032 0018 0038 0078 0143
0035 0089 0043 0068
0029 0055 0040 0097
0010 0022 0093 0072 0141
0033 0062 0090 0108 0100
0061 0021 0131 0109
0006 0013 0024 0088 0111 0137
0042 0110 0095 0104
0027 0053 0020 0181
0052 0054 0049 0112 0134
0056 0048 0075
0030 0017 0044 0066 0079 0139
0026 0058 0114 0067 0138
0025 0031 0057 0046 0071 0096
0002 0015 0041 0115 0113 0099
0034 0014 0092 0140 0164
0028 0037 0019 0085 0102

	///////////////////////// END OF FLYING TIME OPTIMIZATION
	pm.addGoal(new naxos::NsgLabeling(FP));

	///////////////////////////////////////////////
	// 2011-11-01/00:00 to 2011-11-05/23:59, first end date where the reference program found fewer pilots.
	// While I was filling these out 10 at a time and running it (one iteration), I saw V go down.
	FP[0].set(10); // FP ID 0001 -> pilot 10
	FP[1].set(26);
	FP[2].set(6);
	FP[3].set(5);
	FP[4].set(1);
	FP[5].set(18);
	FP[6].set(9);
	FP[7].set(2);
	FP[8].set(8);
	FP[9].set(15);
	FP[10].set(11);
	FP[11].set(2);
	FP[12].set(18);
	FP[13].set(27);
	FP[14].set(26);
	FP[15].set(1);
	FP[16].set(23);
	FP[17].set(12);
	FP[18].set(28);
	FP[19].set(20);
	FP[20].set(17);
	FP[21].set(15);
	FP[22].set(4);
	FP[23].set(18);
	FP[24].set(25);
	FP[25].set(24);
	FP[26].set(20);
	FP[27].set(28);
	FP[28].set(14);
	FP[29].set(23);
	FP[30].set(25); // After this batch of 10, it worked with 28 pilots. So it IS a Naxos problem, my constraints are fine.
	///////////////////////////////////////////////